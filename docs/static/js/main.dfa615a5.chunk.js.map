{"version":3,"sources":["reportWebVitals.ts","components/Cell.tsx","components/Row.tsx","data/GliderGuns.ts","components/GameOfLife.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Cell","React","memo","props","x","y","state","handler","type","className","onClick","Row","states","map","GliderGuns","nextArray","index","i","length","nextState","boundary","lives","next","nx","ny","boundDeadState","periodicState","reduce","prev","current","opt","prevAry","_","nextAry","newAry","push","filter","v","generateState","width","height","rate","table","array","Math","random","GameOfLife","useState","stop","setStop","setBoundary","setState","useEffect","id","setInterval","nextStates","clearInterval","handleClickCell","useCallback","newStates","newRow","handleStop","handleReadData","lines","line","ary","s","charAt","handleRandomData","handleSwitchBoundary","gun","value","queries","window","location","search","slice","split","o","kv","key","val","parseInt","parseFloat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCARQ,EAAOC,IAAMC,MAAK,SAACC,GAAkB,IACjCC,EAAyBD,EAAzBC,EAAGC,EAAsBF,EAAtBE,EAAGC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QAErB,OACE,uBACEC,KAAK,SACLC,UAAWH,EAAQ,QAAU,OAC7BI,QAAS,kBAAMH,EAAQH,EAAGC,SCP1BM,EAAMV,IAAMC,MAAK,SAACC,GAAkB,IAEtCE,EAGEF,EAHFE,EACAO,EAEET,EAFFS,OACAL,EACEJ,EADFI,QAGF,OACE,qBAAKE,UAAU,MAAf,SAEEG,EAAOC,KAAI,SAACP,EAAOF,GAAR,OACT,cAACJ,EAAD,CAEEI,EAAGA,EACHC,EAAGA,EACHC,MAAOA,EACPC,QAASA,GAJJH,WCrBTU,EAAa,CACjB,CACE,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,qQACA,sQAEF,CACE,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,+MACA,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","file":"static/js/main.dfa615a5.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\n\ntype Props = {\n  x: number;\n  y: number;\n  state: boolean;\n  handler: (x: number, y: number) => void;\n};\n\nconst Cell = React.memo((props: Props) => {\n  const { x, y, state, handler } = props;\n\n  return (\n    <input\n      type='button'\n      className={state ? 'alive' : 'dead'}\n      onClick={() => handler(x, y)} />\n  );\n});\nexport { Cell };","import React from 'react';\nimport { Cell } from './Cell';\n\ntype Props = {\n  y: number;\n  states: boolean[];\n  handler: (x: number, y: number) => void;\n};\n\nconst Row = React.memo((props: Props) => {\n  const {\n    y,\n    states,\n    handler\n  } = props;\n\n  return (\n    <div className='row'>\n    {\n      states.map((state, x) => (\n        <Cell\n          key={x}\n          x={x}\n          y={y}\n          state={state}\n          handler={handler}\n          />\n      ))\n    }\n  </div>);\n});\nexport { Row };","const GliderGuns = [\n  [\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□■□□□□□',\n    '□■□□□□□□□□□□□□□□□□□□□□□■□■□□□□□□□□□■■□□□□□□',\n    '□■□■□□□□□□□□□□□□□□□□□□□■■□□□□□□□□□□□□□□□□□□',\n    '□■■□□□□□□■□■□□□□□□□□□□□□■□□□□□□□□□□□□■■■□□□',\n    '□□□□□□□□□■■□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□',\n    '□□□■■■□□□□■□□□□□□□□□□□□□■■□□□□□□□□□□□□■□□□□',\n    '□□□■□□□□□□□□□□□□□□□□□□□□■□■□□□■□□□□□□□□□□□□',\n    '□□□□■□□□□□■■□□□□□□□□□□□□■□□□□■■□□□□□□□□□□□□',\n    '□□□□□□□□□□■□■□□□■□□□□□□□□□□□□■□■□□□□□□□□□□□',\n    '□□□□□□□□□□■□□□□■■□□□□■■□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□■□■□□□■□■□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■■□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□■',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■■■□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□'\n  ],\n  [\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '■■□□□□□□□□□□□□□□■■■□□□□□□□□□□□□□□□',\n    '■■□□□□□□□□□□□□■□□□■□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□■□□□□■□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□■□□□■□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□■□□□■□□□□□□□□□□□□□■■□',\n    '□□□□□□□□□□□□□■□□□□■□□□□□□□□□□□□■■□',\n    '■■□□□□□□□□□□□□■□□□■□□□□□□□□□□□□□□□',\n    '■■□□□□□□□□□□□□□□■■■□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□■□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□■■■□□□■■■□',\n    '□□□□□□□□□□□□□□□□□□□□□□□■■□■□□□■□■■',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□■□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□■□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□■■□□□□□■■□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□■■□□□□□■■□'\n  ],\n  [\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□■■□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□■□□□□□□□■□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□■□■□□□□□□□□□□□□□□■■□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□■■□□□□□□□□□□□□■■□□■□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□■■■□□□□□□□■■□■■□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□■■□■■□□□□□□□■■■□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□■□□■■□□□□□□□□□□□□■■□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□■■□□□□□□□□□□□□□□■□■□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□□□■□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■■□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□■■□□□□□□□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□□□□□□□□□',\n    '□□■□□□□□□□□□□□□□□□□□□□□□■□■□□□□□□□□□□□□□□□□□□□□',\n    '□□■□■□□□□□□□□□□□□□■■■□□□□■■□□□□□□□□□□□□□□□□□□□□',\n    '□□□■■□□□■□□□□□□□□■□□□■□□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□■□■■□□□□□□■□□□□■□□□□□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□■□□□□■□□□□□□■■□■□□□□□□□□□■□□□□□□□□□□□□□□□',\n    '□□□□□□□■□□□■□□□□□□□□■□□□■■□□□□□□■□□□□□□□□□□□□□□',\n    '□□□□□□□□■■■□□□□□□□□□□□□□■□■□□□■■■□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□■■□□□□□□□□□□□□□□□□□□□',\n    '□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□'\n  ]\n];\n\nexport { GliderGuns };","import React from 'react';\nimport { Row } from './Row';\nimport { GliderGuns } from '../data/GliderGuns';\n\nconst nextArray = [\n  [0, 1],\n  [1, 1],\n  [1, 0],\n  [1, -1],\n  [0, -1],\n  [-1, -1],\n  [-1, 0],\n  [-1, 1]\n];\n\nfunction periodicState(states: boolean[][], x: number, y: number) {\n  const ny = index(y, states.length);\n  const nx = index(x, states[ny].length);\n  return (states[ny][nx] ? 1 : 0) as number;\n}\n\nfunction boundDeadState(states: boolean[][], x: number, y: number) {\n  if (y < 0 || y >= states.length) return 0;\n  if (x < 0 || x >= states[y].length) return 0;\n  return (states[y][x] ? 1 : 0) as number;\n}\n\nfunction index(i: number, length: number) {\n  if (i < 0) {\n    return length - 1;\n  } else if (i >= length) {\n    return 0;\n  }\n  return i;\n}\n\nfunction nextState(states: boolean[][], x: number, y: number, boundary: BoundaryType) {\n  const state = states[y][x];\n\n  const lives: number = nextArray.map(next => {\n    const nx = x + next[0];\n    const ny = y + next[1];\n    if (boundary === 'dead') {\n      return boundDeadState(states, nx, ny);\n    } else {\n      return periodicState(states, nx, ny);\n    }\n  }).reduce((prev, current) => prev + current);\n  if (lives === 3) {\n    return true;\n  } else if (lives === 2 && state) {\n    return true;\n  }\n  return false;\n}\n\nfunction nextStates(states: boolean[][], boundary: BoundaryType) {\n  return states.map((array, y) => {\n    return array.map((_, x) => nextState(states, x, y, boundary));\n  });\n}\n\nfunction opt(prev: boolean[][], next: boolean[][]) {\n  return prev.map((prevAry, y) => {\n    if (y >= next.length) return prevAry.map(_ => false);\n\n    const nextAry = next[y];\n    if (prevAry.length > nextAry.length) {\n      const newAry = [...nextAry];\n      for (let i = newAry.length; i < prevAry.length; ++i) {\n        newAry.push(false);\n      }\n      return newAry;\n    }\n    if (prevAry.filter((v, x) => x < nextAry.length && v !== nextAry[x])) {\n      return nextAry;\n    } else {\n      return prevAry;\n    }\n  })\n}\n\nfunction generateState(width: number, height: number, rate: number) {\n  const table: boolean[][] = [];\n  for (let y = 0; y < height; ++y) {\n    const array: boolean[] = [];\n    for (let x = 0; x < width; ++x) {\n      array.push(Math.random() <= rate ? true : false);\n    }\n    table.push(array);\n  }\n  return table;\n}\n\ntype Props = {\n  width: number;\n  height: number;\n  rate: number;\n};\n\ntype BoundaryType = 'dead' | 'periodic';\n\nfunction GameOfLife(props: Props) {\n  const {\n    width, height,\n    rate\n  } = props;\n\n  const [stop, setStop] = React.useState(true);\n  const [boundary, setBoundary] = React.useState<BoundaryType>('dead');\n  const [states, setState] = React.useState(generateState(width, height, rate));\n\n  React.useEffect(() => {\n    if (stop) return;\n    const id = setInterval(() => {\n      setState(states => {\n        const next = nextStates(states, boundary);\n        return opt(states, next);\n      });\n    }, 10);\n    return () => clearInterval(id);\n  }, [states, stop, boundary]);\n\n  const handleClickCell = React.useCallback((x, y) => {\n    setState(states => {\n      const newStates = [...states];\n      const newRow = [...newStates[y]];\n      newRow[x] = !newRow[x];\n      newStates[y] = newRow;\n      return newStates;\n    })\n  }, []);\n\n  const handleStop = React.useCallback(() => {\n    setStop(prev => !prev);\n  }, []);\n\n  const handleReadData = React.useCallback((lines) => {\n    setState(states => {\n      const table: boolean[][] = [];\n      for (const line of lines) {\n        const ary: boolean[] = [];\n        for (let i = 0; i < line.length; ++i) {\n          const s = i < line.length && line.charAt(i) === '■';\n          ary.push(s);\n        }\n        table.push(ary);\n      }\n      return opt(states, table);\n    })\n  }, []);\n\n  const handleRandomData = React.useCallback((rate) => {\n    setState(generateState(width, height, rate))\n  }, [width, height]);\n\n  const handleSwitchBoundary = React.useCallback(() => {\n    setBoundary(prev => {\n      if (prev === 'dead') return 'periodic';\n      return 'dead';\n    });\n  }, []);\n\n  return (\n    <>\n    {\n      states.map((array, y) => (\n        <Row\n          key={y}\n          states={array}\n          y={y}\n          handler={handleClickCell}\n          />\n      ))\n    }\n      <div>\n        {\n          GliderGuns.map((gun, i) => (\n            <input\n              className='ctrl'\n              type='button'\n              value={`Glider Gun ${i + 1}`}\n              onClick={() => handleReadData(gun)} />\n          ))\n        }\n        <input\n          className='ctrl'\n          type='button'\n          value='Random'\n          onClick={() => handleRandomData(rate)}\n          />\n      </div>\n      <div>\n        <input\n          className='ctrl'\n          type='button'\n          value={`Boundary: ${boundary}`}\n          onClick={handleSwitchBoundary} />\n      </div>\n      <div>\n        <input\n          className='ctrl'\n          type='button'\n          value={stop ? 'Start' : 'Stop'}\n          onClick={handleStop} />\n      </div>\n    </>\n  );\n}\nexport { GameOfLife };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { GameOfLife } from './components/GameOfLife';\nimport './index.css';\n\ntype Query = {\n  [key: string] : string;\n};\n\nconst queries = window.location.search.slice(1).split('&').reduce((o, kv) => {\n  const [key, val] = kv.split('=');\n  o[key] = val;\n  return o;\n}, {} as Query);\n\nconst width = parseInt(queries['width'] ?? '100');\nconst height = parseInt(queries['height'] ?? '100');\nconst rate = parseFloat(queries['rate'] ?? '0.1');\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Game of Life</h1>\n    <GameOfLife width={width} height={height} rate={rate} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}